// automatically generated by the FlatBuffers compiler, do not modify

package wiki.models.item;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SendReq extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static SendReq getRootAsSendReq(ByteBuffer _bb) { return getRootAsSendReq(_bb, new SendReq()); }
  public static SendReq getRootAsSendReq(ByteBuffer _bb, SendReq obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SendReq __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int a() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int b() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createSendReq(FlatBufferBuilder builder,
      int a,
      int b) {
    builder.startTable(2);
    SendReq.addB(builder, b);
    SendReq.addA(builder, a);
    return SendReq.endSendReq(builder);
  }

  public static void startSendReq(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addA(FlatBufferBuilder builder, int a) { builder.addInt(0, a, 0); }
  public static void addB(FlatBufferBuilder builder, int b) { builder.addInt(1, b, 0); }
  public static int endSendReq(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SendReq get(int j) { return get(new SendReq(), j); }
    public SendReq get(SendReq obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

