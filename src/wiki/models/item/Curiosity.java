// automatically generated by the FlatBuffers compiler, do not modify

package wiki.models.item;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Curiosity extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static Curiosity getRootAsCuriosity(ByteBuffer _bb) { return getRootAsCuriosity(_bb, new Curiosity()); }
  public static Curiosity getRootAsCuriosity(ByteBuffer _bb, Curiosity obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Curiosity __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int xp() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int mw() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int lp() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int t() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createCuriosity(FlatBufferBuilder builder,
      int xp,
      int mw,
      int lp,
      int t) {
    builder.startTable(4);
    Curiosity.addT(builder, t);
    Curiosity.addLp(builder, lp);
    Curiosity.addMw(builder, mw);
    Curiosity.addXp(builder, xp);
    return Curiosity.endCuriosity(builder);
  }

  public static void startCuriosity(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addXp(FlatBufferBuilder builder, int xp) { builder.addInt(0, xp, 0); }
  public static void addMw(FlatBufferBuilder builder, int mw) { builder.addInt(1, mw, 0); }
  public static void addLp(FlatBufferBuilder builder, int lp) { builder.addInt(2, lp, 0); }
  public static void addT(FlatBufferBuilder builder, int t) { builder.addInt(3, t, 0); }
  public static int endCuriosity(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Curiosity get(int j) { return get(new Curiosity(), j); }
    public Curiosity get(Curiosity obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

